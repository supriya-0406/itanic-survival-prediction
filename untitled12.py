# -*- coding: utf-8 -*-
"""Untitled12.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AMYXyNtOG8AcfCstdiFXw4LT8M7IZAOJ
"""

x=10
def my_faction():
  x=5
  print("local varial is inside",x)
my_faction()
print("Global x outside function",x)

x=int(input("Enter the number: "))
if x%2 == 0:
  print("Even")
else:
  print("odd")

fruits = ['Apple','Banana','mango']
for fruit in fruits:
  print(fruit.upper())

for i in range(1,6):
  print(i**2)

def greet(name):
  return f"hello, {name}!"
print(greet("Supriya"))

import pandas as pd
from google.colab import files
uploaded = files.upload()

df=pd.read_csv('people-100.csv')
df

print(df.head())

print(df.info())

import pandas as pd
from google.colab import files
uploaded = files.upload()

df=pd.read_csv('customers.csv')
df

print(df.head())

print(df.info())

print(df.describe())

print(df['gender'].value_counts)

print(df[df['age'] > 30][['first_name','age']].head())

"""day 2 to 3

"""

fruits = ["apple","banana","cherry"]
print(fruits[1])
fruits.append("orange")
for fruit in fruits:
  print(fruit)

student = {
    "name": "Alice",
    "age": 22,
    "course": "Data science"
}
print(student["name"])
student["age"] = 23

import pandas as pd
data = {'name':['anil','sup'],'Age':[22,25]}
df = pd.DataFrame(data)
print(data)

import numpy as np
arr = np.array([1,2,3,4])
print(arr*2)

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
sns.set(style="whitegrid")

url = "https://raw.githubusercontent.com/datasciencedojo/datasets/master/titanic.csv"
df = pd.read_csv(url)
df.head()

print(df.info())

print(df.describe())

print(df.isnull().sum())

print(df.corr(numeric_only=True))

sns.barplot(x="Sex",y="Survived",
            data=df)
plt.title("Survived vs Sex")
plt.show()

sns.barplot(x="Pclass", y="Survived",
            data=df)
plt.title("Survived Rate by Passenger class")
plt.show()

sns.heatmap(df.isnull(), cmap="viridis", cbar=False)
plt.title("missing valuse heatmap")
plt.show()

sns.boxplot(x=df["Fare"])
plt.title("Boxplot of false")
plt.show()

import numpy as mp
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

url="https://raw.githubusercontent.com/datasciencedojo/datasets/master/titanic.csv"
df=pd.read_csv(url)
df.head()

df=df[['Survived','Pclass','Sex','Age','Fare']]
df.dropna(inplace=True)
df['Sex']=df['Sex'].map({'male': 0, 'female': 1})

X = df[['Pclass', 'Sex', 'Age', 'Fare']]
y = df['Survived']

X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, random_state=42)

# Step 1: Import
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

# Step 2: Load dataset
url = "https://raw.githubusercontent.com/datasciencedojo/datasets/master/titanic.csv"
df = pd.read_csv(url)

# Step 3: Select relevant columns
df = df[['Survived', 'Pclass', 'Sex', 'Age', 'Fare']]

# Step 4: Clean data
df['Age'].fillna(df['Age'].median(), inplace=True)
df['Sex'] = df['Sex'].map({'male': 0, 'female': 1})

X = df[['Pclass', 'Sex', 'Age', 'Fare']]
y = df['Survived']

X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.7, random_state=42)

# Create and train the model
model = LogisticRegression()
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Calculate accuracy
accuracy = accuracy_score(y_test, y_pred)
print("Model Accuracy:", accuracy)